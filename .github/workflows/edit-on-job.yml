name: üé¨ Auto Reel Processor

on:
  repository_dispatch:
    types: [new_reel_link]   # Must match the "event_type" from your n8n HTTP Request

jobs:
  process_reel:
    name: Process Instagram Reel
    runs-on: ubuntu-latest

    env:
      PYTHONUNBUFFERED: 1
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
      LOG_LEVEL: INFO

    steps:
      # -------------------------------
      # 1Ô∏è‚É£ Checkout Repository
      # -------------------------------
      - name: üß© Checkout Repo
        uses: actions/checkout@v3

      # -------------------------------
      # 2Ô∏è‚É£ Set up Python Environment
      # -------------------------------
      - name: üêç Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # -------------------------------
      # 3Ô∏è‚É£ Install Dependencies
      # -------------------------------
      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -------------------------------
      # 4Ô∏è‚É£ Get Payload (Instagram URL)
      # -------------------------------
      - name: üîó Get Reel Link
        id: getlink
        run: |
          echo "INSTAGRAM_URL=${{ github.event.client_payload.instagram_url }}" >> $GITHUB_ENV
          echo "üéØ Reel URL: ${{ github.event.client_payload.instagram_url }}"

      # -------------------------------
      # 5Ô∏è‚É£ Create Job JSON (Metadata)
      # -------------------------------
      - name: üóÇÔ∏è Create Job Metadata
        run: |
          mkdir -p jobs/split
          echo "{ \"reel_url\": \"${INSTAGRAM_URL}\", \"job_id\": \"$(date +%s)\" }" > jobs/split/job_${{ github.run_id }}.json
          echo "Created jobs/split/job_${{ github.run_id }}.json"

      # -------------------------------
      # 6Ô∏è‚É£ Download Reel
      # -------------------------------
      - name: ‚¨áÔ∏è Download Reel Video
        run: |
          python scripts/download_reel.py jobs/split/job_${{ github.run_id }}.json

      # -------------------------------
      # 7Ô∏è‚É£ Process Video (Crop + Text + Logo)
      # -------------------------------
      - name: üé® Process Video with AI Cropping
        run: |
          python scripts/process_video.py jobs/split/job_${{ github.run_id }}.json

      # -------------------------------
      # 8Ô∏è‚É£ Upload to Google Drive
      # -------------------------------
      - name: ‚òÅÔ∏è Upload Processed Video to Google Drive
        run: |
          python scripts/upload_drive.py jobs/split/job_${{ github.run_id }}.json

      # -------------------------------
      # 9Ô∏è‚É£ Save Artifacts (Optional)
      # -------------------------------
      - name: üß± Upload Logs & Output as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: processed_output
          path: |
            jobs/split/
            output/

      # -------------------------------
      # üîü Success Message
      # -------------------------------
      - name: ‚úÖ Job Completed
        run: echo "üéâ Processing completed successfully for ${{ github.event.client_payload.instagram_url }}"
